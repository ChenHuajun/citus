Parsed test spec with 2 sessions

starting permutation: s1-begin s1-add-node-2 s2-create-ref s1-commit s1-show-placements
node_name      node_port      

localhost      57637          
step s1-begin: 
	BEGIN;

step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-ref: <... completed>
create_reference_table

               
step s1-show-placements: 
	SELECT
		nodename, nodeport
	FROM
		pg_dist_shard_placement JOIN pg_dist_shard USING (shardid)
	WHERE
		logicalrelid = 'ref_table'::regclass
	ORDER BY
		nodename, nodeport;

nodename       nodeport       

localhost      57637          
localhost      57638          
master_remove_node

               
               

starting permutation: s1-begin s1-add-node-2 s2-create-ref s1-abort s1-show-placements
node_name      node_port      

localhost      57637          
step s1-begin: 
	BEGIN;

step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');
 <waiting ...>
step s1-abort: 
	ABORT;

step s2-create-ref: <... completed>
create_reference_table

               
step s1-show-placements: 
	SELECT
		nodename, nodeport
	FROM
		pg_dist_shard_placement JOIN pg_dist_shard USING (shardid)
	WHERE
		logicalrelid = 'ref_table'::regclass
	ORDER BY
		nodename, nodeport;

nodename       nodeport       

localhost      57637          
master_remove_node

               

starting permutation: s2-begin s2-create-ref s1-add-node-2 s2-commit s1-show-placements
node_name      node_port      

localhost      57637          
step s2-begin: 
	BEGIN;

step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');

create_reference_table

               
step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-node-2: <... completed>
?column?       

1              
step s1-show-placements: 
	SELECT
		nodename, nodeport
	FROM
		pg_dist_shard_placement JOIN pg_dist_shard USING (shardid)
	WHERE
		logicalrelid = 'ref_table'::regclass
	ORDER BY
		nodename, nodeport;

nodename       nodeport       

localhost      57637          
localhost      57638          
master_remove_node

               
               

starting permutation: s1-add-node-2 s1-begin s1-remove-node-2 s2-create-ref s1-commit s1-show-placements
node_name      node_port      

localhost      57637          
step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s1-begin: 
	BEGIN;

step s1-remove-node-2: 
	SELECT * FROM master_remove_node('localhost', 57638);

master_remove_node

               
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-ref: <... completed>
create_reference_table

               
step s1-show-placements: 
	SELECT
		nodename, nodeport
	FROM
		pg_dist_shard_placement JOIN pg_dist_shard USING (shardid)
	WHERE
		logicalrelid = 'ref_table'::regclass
	ORDER BY
		nodename, nodeport;

nodename       nodeport       

localhost      57637          
master_remove_node

               

starting permutation: s1-add-node-2 s1-begin s1-remove-node-2 s2-create-ref s1-abort s1-show-placements
node_name      node_port      

localhost      57637          
step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s1-begin: 
	BEGIN;

step s1-remove-node-2: 
	SELECT * FROM master_remove_node('localhost', 57638);

master_remove_node

               
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');
 <waiting ...>
step s1-abort: 
	ABORT;

step s2-create-ref: <... completed>
create_reference_table

               
step s1-show-placements: 
	SELECT
		nodename, nodeport
	FROM
		pg_dist_shard_placement JOIN pg_dist_shard USING (shardid)
	WHERE
		logicalrelid = 'ref_table'::regclass
	ORDER BY
		nodename, nodeport;

nodename       nodeport       

localhost      57637          
localhost      57638          
master_remove_node

               
               

starting permutation: s1-add-node-2 s2-begin s2-create-ref s1-remove-node-2 s2-commit s1-show-placements
node_name      node_port      

localhost      57637          
step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s2-begin: 
	BEGIN;

step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');

create_reference_table

               
step s1-remove-node-2: 
	SELECT * FROM master_remove_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-remove-node-2: <... completed>
master_remove_node

               
step s1-show-placements: 
	SELECT
		nodename, nodeport
	FROM
		pg_dist_shard_placement JOIN pg_dist_shard USING (shardid)
	WHERE
		logicalrelid = 'ref_table'::regclass
	ORDER BY
		nodename, nodeport;

nodename       nodeport       

localhost      57637          
master_remove_node

               

starting permutation: s2-create-ref s1-begin s1-add-node-2 s2-insert s1-commit s2-select s1-remove-node-1 s2-select
node_name      node_port      

localhost      57637          
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');

create_reference_table

               
step s1-begin: 
	BEGIN;

step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s2-insert: 
	INSERT INTO ref_table VALUES (1,2);
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-insert: <... completed>
step s2-select: 
	SELECT * FROM ref_table;

x              y              

1              2              
step s1-remove-node-1: 
	SELECT 1 FROM master_remove_node('localhost', 57637);

?column?       

1              
step s2-select: 
	SELECT * FROM ref_table;

x              y              

1              2              
master_remove_node

               

starting permutation: s2-create-ref s2-begin s2-insert s1-add-node-2 s2-commit s2-select s1-remove-node-1 s2-select
node_name      node_port      

localhost      57637          
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');

create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-insert: 
	INSERT INTO ref_table VALUES (1,2);

step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-node-2: <... completed>
?column?       

1              
step s2-select: 
	SELECT * FROM ref_table;

x              y              

1              2              
step s1-remove-node-1: 
	SELECT 1 FROM master_remove_node('localhost', 57637);

?column?       

1              
step s2-select: 
	SELECT * FROM ref_table;

x              y              

1              2              
master_remove_node

               

starting permutation: s1-add-node-2 s2-create-ref s1-begin s1-remove-node-2 s2-insert s1-commit s2-select
node_name      node_port      

localhost      57637          
step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');

create_reference_table

               
step s1-begin: 
	BEGIN;

step s1-remove-node-2: 
	SELECT * FROM master_remove_node('localhost', 57638);

master_remove_node

               
step s2-insert: 
	INSERT INTO ref_table VALUES (1,2);
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-insert: <... completed>
step s2-select: 
	SELECT * FROM ref_table;

x              y              

1              2              
master_remove_node

               

starting permutation: s1-add-node-2 s2-create-ref s2-begin s2-insert s1-remove-node-2 s2-commit s2-select
node_name      node_port      

localhost      57637          
step s1-add-node-2: 
	SELECT 1 FROM master_add_node('localhost', 57638);

?column?       

1              
step s2-create-ref: 
	CREATE TABLE ref_table (x int, y int);
	SELECT create_reference_table('ref_table');

create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-insert: 
	INSERT INTO ref_table VALUES (1,2);

step s1-remove-node-2: 
	SELECT * FROM master_remove_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-remove-node-2: <... completed>
master_remove_node

               
step s2-select: 
	SELECT * FROM ref_table;

x              y              

1              2              
master_remove_node

               
